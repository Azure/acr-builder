trigger:
- main

pr:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/work'
  ModulePath: '$(GOPATH)/src/github.com/$(build.repository.name)'

steps:

- task: GoTool@0
  inputs:
    version: '1.24.4'

- script: |
    set -e

    # Static binary workaround for CodeQL and Go 1.21+
    mkdir -p $AGENT_TEMPDIRECTORY/codeql-go-tracing
    WORKAROUND_DIR=$AGENT_TEMPDIRECTORY/codeql-go-tracing
    WHICH_GO=$(which go)
    cat > "${WORKAROUND_DIR}/go" <<EOF
    #!/bin/bash
    exec $WHICH_GO "\$@"
    EOF

    chmod 755 "${WORKAROUND_DIR}/go"
    export PATH="${WORKAROUND_DIR}:${PATH}"

    # Install golangci-lint to GOPATH/bin
    export PATH="$(GOPATH)/bin:$PATH"
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b "$(GOPATH)/bin" v1.64.8

    # Setup as before
    GOOS=linux scripts/setup/dev_setup
    echo '##vso[task.prependpath]$(GOPATH)/bin'
    mkdir -p '$(ModulePath)'
    shopt -s dotglob extglob
    mv !(work) '$(ModulePath)'

    # Confirm wrapper is used
    echo "Go in PATH: $(which go)"
    cat $(which go)
    go version
    go env

    # Build (CodeQL will now see the wrapper)
    cd '$(ModulePath)'
    go build ./...
    GOOS=linux make
  displayName: 'Setup and Build (with Go wrapper)'